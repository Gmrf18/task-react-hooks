[{"/home/gmrfdesk-u/development/react/todo-app-test/src/App.tsx":"1","/home/gmrfdesk-u/development/react/todo-app-test/src/reportWebVitals.ts":"2","/home/gmrfdesk-u/development/react/todo-app-test/src/index.tsx":"3","/home/gmrfdesk-u/development/react/todo-app-test/src/components/Tasks.tsx":"4","/home/gmrfdesk-u/development/react/todo-app-test/src/components/TaskDetail.tsx":"5","/home/gmrfdesk-u/development/react/todo-app-test/src/components/TaskModal.tsx":"6","/home/gmrfdesk-u/development/react/todo-app-test/src/application/CurrentTaskProvider.tsx":"7"},{"size":1182,"mtime":1611617781783,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611376956735,"results":"10","hashOfConfig":"9"},{"size":501,"mtime":1611378006729,"results":"11","hashOfConfig":"9"},{"size":1809,"mtime":1611603489782,"results":"12","hashOfConfig":"9"},{"size":1078,"mtime":1611618133582,"results":"13","hashOfConfig":"9"},{"size":2712,"mtime":1611618736246,"results":"14","hashOfConfig":"9"},{"size":290,"mtime":1611602158187,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l4ewh4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gmrfdesk-u/development/react/todo-app-test/src/App.tsx",[],"/home/gmrfdesk-u/development/react/todo-app-test/src/reportWebVitals.ts",[],"/home/gmrfdesk-u/development/react/todo-app-test/src/index.tsx",[],"/home/gmrfdesk-u/development/react/todo-app-test/src/components/Tasks.tsx",["31"],"import React, { useContext, useState } from \"react\";\nimport { CurrentTaskProvider } from \"../application/CurrentTaskProvider\";\nimport { Props } from \"../interfaces/modalSidebar.interface\";\nimport { ITask } from \"../interfaces/task.interface\";\n\ninterface ITasks extends Props {\n  tasks: ITask[];\n}\n\nexport const Tasks: React.FC<ITasks> = ({\n  setModalSidebar,\n  showModalSidebar,\n  tasks,\n}) => {\n  const title = \"My Task\";\n  const { setCurrentTask } = useContext(CurrentTaskProvider);\n\n  const openSidebar = (task: any) => {\n    setCurrentTask(task);\n    setModalSidebar({\n      ...showModalSidebar,\n      sidebar: true,\n    });\n  };\n  const newTask = () => {\n    setModalSidebar({ ...showModalSidebar, modal: true });\n  };\n\n  return (\n    <div className=\"task-root\">\n      <div>{title}</div>\n\n      <div className=\"card\">\n        <div className=\"card-container\">\n          <div className=\"HeaderTable\">\n            Task <input type=\"date\"></input>\n            <button onClick={newTask}>Add Task</button>\n          </div>\n          <table className=\"\">\n            <thead>\n              <tr>\n                <th className=\"title\">Title</th>\n                <th className=\"created\">Created</th>\n                <th className=\"description\">Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.map((task: ITask) => (\n                <tr key={task.id} onDoubleClick={() => openSidebar(task)}>\n                  <td className=\"title\">{task.title}</td>\n                  <td className=\"created\">{task.created}</td>\n                  <td className=\"description\">\n                    {task.description.substr(0, 50)}...\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/gmrfdesk-u/development/react/todo-app-test/src/components/TaskDetail.tsx",[],"/home/gmrfdesk-u/development/react/todo-app-test/src/components/TaskModal.tsx",[],"/home/gmrfdesk-u/development/react/todo-app-test/src/application/CurrentTaskProvider.tsx",[],{"ruleId":"32","severity":1,"message":"33","line":1,"column":29,"nodeType":"34","messageId":"35","endLine":1,"endColumn":37},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]